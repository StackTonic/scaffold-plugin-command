<?php

namespace {{plugin_namespace}}\{{plugin_class}}\Frontend;
/**
 * The public-facing functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the public-facing stylesheet and JavaScript.
 *
 * @package           {{plugin_namespace}}\{{plugin_class}}\Frontend
 * @since             0.0.1
 */
class {{plugin_class}}_Frontend
{

    /**
     * The ID of this plugin.
     *
     * @since  0.0.1
     * @access private
     * @var    string $plugin_name The ID of this plugin.
     */
    private $plugin_name;

    /**
     * The version of this plugin.
     *
     * @since  0.0.1
     * @access private
     * @var    string $version The current version of this plugin.
     */
    private $version;

    /**
     * Initialize the class and set its properties.
     *
     * @param string $plugin_name The name of the plugin.
     * @param string $version     The version of this plugin.
     * @since 0.0.1
     */
    public function __construct($plugin_name, $version)
    {
        $this->plugin_name = $plugin_name;
        $this->version = $version;
    }

    /**
     * Register the stylesheets for the public-facing side of the site.
     *
     * @since 0.0.1
     */
    public function enqueue_styles()
    {

        /**
         * This function is provided for demonstration purposes only.
         *
         * An instance of this class should be passed to the run() function
         * defined in {{plugin_class}}_Loader as all of the hooks are defined
         * in that particular class.
         *
         * The {{plugin_class}}_Loader will then create the relationship
         * between the defined hooks and the functions defined in this
         * class.
         */

        wp_enqueue_style($this->plugin_name, plugin_dir_url(__FILE__) . 'css/{{plugin_class_lower}}-public.css', array(), $this->version, 'all');
    }

    /**
     * Register the JavaScript for the public-facing side of the site.
     *
     * @since 0.0.1
     */
    public function enqueue_scripts()
    {

        /**
         * This function is provided for demonstration purposes only.
         *
         * An instance of this class should be passed to the run() function
         * defined in {{plugin_class}}_Loader as all of the hooks are defined
         * in that particular class.
         *
         * The {{plugin_class}}_Loader will then create the relationship
         * between the defined hooks and the functions defined in this
         * class.
         */
        wp_enqueue_script($this->plugin_name, plugin_dir_url(__FILE__) . 'js/{{plugin_class_lower}}-public.js', array('jquery'), $this->version, true);

        wp_localize_script(
            $this->plugin_name,
            'opt',
            array(
                'ajaxUrl' => admin_url('admin-ajax.php'),
                'ajaxPost' => admin_url('admin-post.php'),
                'restUrl' => rest_url('wp/v2/product')
                )
        );
    }
}
