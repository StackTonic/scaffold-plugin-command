<?php

namespace {{plugin_namespace}}\{{plugin_class}}\Admin;

/**
 * The admin-specific functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the admin-specific stylesheet and JavaScript.
 *
 * @since      0.0.1
 *
 * @package    {{plugin_namespace}}\{{plugin_class}}\Admin
 */
class {{plugin_class}}_Admin
{
	/**
	 * The Name of this plugin.
	 *
	 * @since    0.0.1
	 * @access   private
	 * @var string the Name of this plugin
	 */
	private $plugin_name;

	/**
	 * The version of this plugin.
	 *
	 * @since    0.0.1
	 * @access   private
	 * @var string the current version of this plugin
	 */
	private $version;

	/**
	 * Initialize the class and set its properties.
	 *
	 * @since    1.0.0
	 * 
	 * @param string $plugin_name the name of this plugin.
	 * @param string $version the version of this plugin.
	 *
	 * @return void
	 */
	public function __construct($plugin_name, $version)
	{
		$this->plugin_name         = $plugin_name;
		$this->version             = $version;
		$this->load_dependencies();
	}

	/**
	 * Load the required dependencies for the Admin facing functionality.
	 *
	 * Include the following files that make up the plugin:
	 *
	 * - {{plugin_class}}_Settings. Registers the admin settings and page.
	 * - {{plugin_class}}_Rest. Registers the Rest api.
	 * - {{plugin_class}}_Ajax. Registers the Ajax api.
	 *
	 * @since    0.0.1
	 * 
	 * @return void
	 */
	private function load_dependencies()
	{
		require_once plugin_dir_path(dirname(__FILE__)) . 'admin/class-{{plugin_class_lower}}-settings.php';
		require_once plugin_dir_path(dirname(__FILE__)) . 'admin/class-{{plugin_class_lower}}-ajax.php';
		require_once plugin_dir_path(dirname(__FILE__)) . 'admin/class-{{plugin_class_lower}}-rest.php';
	}

	/**
	 * Register the stylesheets for the admin area.
	 *
	 * @since    0.0.1
	 * 
	 * @return void
	 */
	public function enqueue_styles()
	{
	    /**
         * This function is provided for demonstration purposes only.
         *
         * An instance of this class should be passed to the run() function
         * defined in {{plugin_class}}_Loader as all of the hooks are defined
         * in that particular class.
         *
         * The {{plugin_class}}_Loader will then create the relationship
         * between the defined hooks and the functions defined in this
         * class.
         */

        wp_enqueue_style(
            $this->plugin_name,
            plugin_dir_url(__FILE__) . 'css/{{plugin_class_lower}}-admin.css',
            array(),
            $this->version,
            'all'
        );
	}

	/**
	 * Register the JavaScript for the admin area.
	 *
	 * @since    0.0.1
	 * 
	 * @return void
	 */
	public function enqueue_scripts()
	{
		/**
         * This function is provided for demonstration purposes only.
         *
         * An instance of this class should be passed to the run() function
         * defined in {{plugin_class}}_Loader as all of the hooks are defined
         * in that particular class.
         *
         * The {{plugin_class}}_Loader will then create the relationship
         * between the defined hooks and the functions defined in this
         * class.
         */

		wp_enqueue_script(
			$this->plugin_name,
			plugin_dir_url(__FILE__) . 'js/{{plugin_class_lower}}-admin.js',
			array('jquery'),
			$this->version,
			true
		);
	}
}
